{"version":3,"sources":["webpack:///./src/components/Layout/Header/index.js","webpack:///./src/components/Layout/Divider.js","webpack:///./src/styles/BlogStyles.js","webpack:///./src/components/Layout/AuthorAside.js","webpack:///./src/styles/CodeHighlighter.js","webpack:///./src/templates/blogPost.js"],"names":["StyledHeader","styled","header","StyledLabel2","Label2","Header","to","Logo","size","sizes","small","DividerStyles","css","Divider","hr","BlogStyles","Body1Styles","Heading1Styles","Heading2Styles","Heading3Styles","Heading4Styles","Heading5Styles","Heading6Styles","Aside1Styles","CodeStyles","Label2Styles","Aside","aside","StyledDivider","Avatar","Image","StyledBody3","Body3","StyledLabel3","Label3","AuthorAside","data","useStaticQuery","avatar","childImageSharp","fixed","author","site","siteMetadata","name","summary","href","target","rel","CodeHighlighter","createGlobalStyle","Article","article","StyledHeading1","Heading1","Cover","section","SuggestedArticles","ul","SectionStyles","ArticleSection","Section","StyledFooter","Footer","BlogPostTemplate","html","location","markdownRemark","frontmatter","title","date","description","cover","previous","next","image","publicURL","className","itemScope","itemType","itemProp","alt","aria-hidden","style","width","minHeight","fluid","dangerouslySetInnerHTML","__html","fields","slug"],"mappings":"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","file":"component---src-templates-blog-post-js-bc53c5dd4cc96bd2a8bb.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Label2 } from '../../../styles/Typography'\nimport Logo from '../Logo'\n\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n  max-width: 1250px;\n  margin: 3rem auto;\n  line-height: 2rem;\n  padding: 0 1rem;\n\n  @media screen and (min-width: 880px) {\n    padding: 0 3rem;\n  }\n`\n\nconst StyledLabel2 = styled(Label2)`\n  flex-grow: 1;\n  text-align: center;\n  line-height: 2rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0 1rem;\n  white-space: nowrap;\n`\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <Link to=\"/\">\n        <Logo size={Logo.sizes.small} />\n      </Link>\n      <StyledLabel2>Nicos Tsourektsidis \\ Blog</StyledLabel2>\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import styled, { css } from 'styled-components'\n\nexport const DividerStyles = css`\n  border: none;\n  margin: 6rem;\n  content: '. . .';\n  text-align: center;\n  opacity: 0.5;\n  height: 1px;\n  box-shadow: 0px -1px 0px 0px rgba(var(--caption-color), 0.5);\n`\n\nconst Divider = styled.hr`\n  ${DividerStyles}\n`\n\nexport default Divider\n","import { css } from 'styled-components'\nimport { DividerStyles } from '../components/Layout/Divider'\nimport {\n  Heading1Styles,\n  Heading2Styles,\n  Heading3Styles,\n  Heading4Styles,\n  Heading5Styles,\n  CodeStyles,\n  Body1Styles,\n  Aside1Styles,\n  Heading6Styles,\n  Label2Styles,\n} from '../styles/Typography'\n\nconst BlogStyles = css`\n  p {\n    ${Body1Styles}\n    margin: 1em 0;\n  }\n\n  li {\n    ${Body1Styles}\n  }\n\n  h1 {\n    ${Heading1Styles}\n    margin-right: 2rem;\n  }\n\n  h2 {\n    ${Heading2Styles}\n    margin-top: 7rem;\n    margin-right: 2rem;\n  }\n\n  h3 {\n    ${Heading3Styles}\n    margin-top: 5rem;\n    margin-right: 2rem;\n  }\n\n  h4 {\n    ${Heading4Styles}\n    margin-top: 4rem;\n    margin-right: 2rem;\n  }\n\n  h5 {\n    ${Heading5Styles}\n    margin-top: 4rem;\n    margin-right: 2rem;\n  }\n\n  h6 {\n    ${Heading6Styles}\n    margin-top: 2rem;\n    margin-right: 2rem;\n  }\n\n  blockquote {\n    margin: 3rem 0 4rem 3rem;\n\n    p {\n      ${Aside1Styles}\n      margin: 0;\n    }\n\n    @media screen and (min-width: 480px) {\n      margin: 4rem 2rem 5rem 7rem;\n    }\n\n    @media screen and (min-width: 900px) {\n      margin: 6rem -3rem 5rem 7rem;\n    }\n  }\n\n  code {\n    ${CodeStyles}\n    position: relative;\n  }\n\n  pre {\n    background-color: rgba(var(--text-color), 0.05);\n    border-radius: calc(0.9 * 1rem);\n    line-height: 1;\n    padding: 0.88rem 1rem;\n    margin: 2rem 0;\n    position: relative;\n    max-width: 100%;\n\n    @media screen and (min-width: 927px) {\n      border-radius: calc(1.5 * 1rem);\n      padding: 2.4rem 3rem;\n      margin: 3rem -3rem;\n      max-width: auto;\n    }\n  }\n\n  ul,\n  ol {\n    margin: 2rem 0;\n    padding-left: 1.5rem;\n\n    ul,\n    ol {\n      margin: 1rem 0;\n    }\n  }\n\n  hr {\n    ${DividerStyles}\n  }\n\n  .gatsby-resp-image-wrapper {\n    width: 100vw;\n    max-width: calc(640px + 2rem) !important;\n    margin: 2rem auto 2rem -1rem !important;\n\n    @media screen and (min-width: 780px) {\n      max-width: 100vw !important;\n      margin: 5rem 0 5rem calc(-50vw + 375px) !important;\n    }\n\n    @media screen and (min-width: 1200px) {\n      max-width: calc(750px + 40%) !important;\n      margin: 5rem auto 5rem -20% !important;\n    }\n  }\n\n  :not(.gatsby-resp-image-wrapper) {\n    img {\n      width: 100vw;\n      max-width: calc(640px + 2rem);\n      margin: 2rem auto 2rem -1rem;\n\n      @media screen and (min-width: 780px) {\n        max-width: 100vw;\n        margin: 5rem 0 5rem calc(-50vw + 375px);\n      }\n\n      @media screen and (min-width: 1200px) {\n        max-width: calc(750px + 40%);\n        margin: 5rem auto 5rem -20%;\n      }\n    }\n  }\n\n  :not(.gatsby-resp-image-wrapper) img,\n  .gatsby-resp-image-wrapper,\n  p > .gatsby-resp-image-wrapper {\n    & + em {\n      ${Label2Styles}\n      margin-top: 2rem;\n      margin-bottom: 3rem;\n      display: block;\n      font-style: normal;\n\n      @media screen and (min-width: 780px) {\n        margin-top: -4rem;\n        margin-bottom: 5rem;\n      }\n    }\n  }\n`\n\nexport default BlogStyles\n","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Image from 'gatsby-image'\nimport styled from 'styled-components'\nimport { Body3, Label3 } from '../../styles/Typography'\nimport Divider from './Divider'\n\nconst Aside = styled.aside`\n  padding: 2rem 4rem 1rem 1rem;\n\n  @media screen and (min-width: 320px) {\n    display: flex;\n  }\n`\n\nconst StyledDivider = styled(Divider)`\n  margin: 4rem 0 0 0;\n`\n\nconst Avatar = styled(Image)`\n  flex-shrink: 0;\n  display: block;\n  border-radius: 100%;\n  margin-right: 1rem;\n`\n\nconst StyledBody3 = styled(Body3)`\n  margin-top: 1.35rem;\n\n  @media screen and (min-width: 320px) {\n    margin-top: 0;\n  }\n`\n\nconst StyledLabel3 = styled(Label3)`\n  margin-top: 0.7rem;\n`\n\nexport default function AuthorAside() {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/avatar.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n            bio\n          }\n          social {\n            twitter\n            medium\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n  const author = data?.site?.siteMetadata?.author?.name\n  const summary = data?.site?.siteMetadata?.author?.summary\n\n  return (\n    <>\n      <StyledDivider />\n      <Aside>\n        <a href=\"https://twitter.com/nicotsou\" target=\"_blank\" rel=\"noreferrer\">\n          <Avatar fixed={avatar} />\n        </a>\n        <div>\n          <StyledBody3>\n            {summary}{' '}\n            <a\n              href=\"https://twitter.com/nicotsou\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Follow my work on Twitter\n            </a>\n          </StyledBody3>\n          <StyledLabel3>{author}</StyledLabel3>\n        </div>\n      </Aside>\n    </>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst CodeHighlighter = createGlobalStyle`\n  pre[class*='language-'],\n  code[class*='language-'] {\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    tab-size: 4;\n    hyphens: none;\n  }\n\n  pre[class*='language-'] {\n    overflow: auto;\n  }\n\n  :not(pre) > code[class*='language-'] {\n    padding: 4px 6px;\n    border-radius: 0.3em;\n    background: rgba(var(--text-color), 0.05);\n  }\n\n  /*.namespace {} */\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    opacity: 0.65;\n  }\n  /* .token.punctuation {} */\n  .token.property,\n  .token.tag,\n  .token.boolean,\n  .token.number,\n  .token.constant,\n  .token.symbol,\n  .token.deleted {\n    color: rgba(var(--text-color), 0.85);\n  }\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    opacity: 0.65;\n  }\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    opacity: 0.5;\n  }\n  .token.atrule,\n  .token.attr-value,\n  .token.keyword {\n    opacity: 0.8;\n  }\n  .token.function {\n    opacity: 0.65;\n  }\n  .token.regex,\n  .token.important,\n  .token.variable {\n    opacity: 0.65;\n  }\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n  .token.entity {\n    cursor: help;\n  }\n\n\n  pre[data-line] {\n    position: relative;\n  }\n\n  pre[class*='language-'] > code[class*='language-'] {\n    position: relative;\n    z-index: 1;\n  }\n\n  .line-highlight {\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    padding: inherit 0;\n    margin-top: 1em;\n    box-shadow: inset 5px 0 0 rgb(var(--light-sea-green-value));\n    z-index: 0;\n    pointer-events: none;\n    line-height: inherit;\n    white-space: pre;\n  }\n\n  .gatsby-highlight-code-line {\n    background-color: rgba(var(--text-color), 0.05);\n    display: block;\n    margin: -0.125rem -3rem;\n    padding: 0.125rem 3rem;\n  }\n`\n\nexport default CodeHighlighter\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\nimport Header from '../components/Layout/Header'\nimport { Body2, Heading1, Label2 } from '../styles/Typography'\nimport BlogStyles from '../styles/BlogStyles'\nimport Footer from '../components/Layout/Footer'\nimport AuthorAside from '../components/Layout/AuthorAside'\nimport styled, { css } from 'styled-components'\nimport CodeHighlighter from '../styles/CodeHighlighter'\nimport SEO from '../components/seo'\n\nconst Article = styled.article`\n  margin-top: clamp(0.5rem, calc(100vh * 20 / 100), 9.5rem);\n`\n\nconst StyledHeading1 = styled(Heading1)`\n  margin-right: 2rem;\n`\n\nconst Cover = styled.section`\n  max-width: 1250px;\n  margin: 2rem auto 4rem auto;\n`\n\nconst SuggestedArticles = styled.ul`\n  margin: 2rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`\n\nconst SectionStyles = css`\n  margin: 0 auto;\n  max-width: 640px;\n  padding: 0 1rem;\n\n  @media screen and (min-width: 780px) {\n    max-width: 750px;\n  }\n`\n\nconst ArticleSection = styled.section`\n  ${BlogStyles}\n  ${SectionStyles}\n`\n\nconst Section = styled.section`\n  ${SectionStyles}\n`\n\nconst StyledFooter = styled(Footer)`\n  ${SectionStyles}\n`\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const { html } = data?.markdownRemark\n  const { title, date, description, cover } = data?.markdownRemark?.frontmatter\n  const { previous, next } = data\n\n  return (\n    <main>\n      <SEO title={title} image={cover.publicURL} description={description} />\n      <Header />\n      <CodeHighlighter />\n      <Article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <Section>\n          <header>\n            <Label2>{date}</Label2>\n            <StyledHeading1 itemProp=\"headline\">{title}</StyledHeading1>\n          </header>\n        </Section>\n        <Cover>\n          <Image\n            alt={title}\n            aria-hidden=\"true\"\n            style={{ width: '100%', minHeight: '67vh' }}\n            fluid={cover?.childImageSharp?.fluid}\n          />\n        </Cover>\n\n        <ArticleSection\n          dangerouslySetInnerHTML={{ __html: html }}\n          itemProp=\"articleBody\"\n        />\n\n        <Section>\n          <AuthorAside />\n          <nav>\n            <SuggestedArticles>\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    <Body2>← {previous.frontmatter.title}</Body2>\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    <Body2>{next.frontmatter.title} →</Body2>\n                  </Link>\n                )}\n              </li>\n            </SuggestedArticles>\n          </nav>\n        </Section>\n      </Article>\n      <StyledFooter />\n    </main>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        cover {\n          publicURL\n          childImageSharp {\n            fluid(maxWidth: 1900) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}