{"version":3,"sources":["webpack:///./src/components/PostList.js","webpack:///./src/pages/404.js"],"names":["List","styled","ul","PostItem","li","PostLink","Link","Heading3Styles","PostList","onLinkHover","data","useStaticQuery","role","onMouseLeave","allMarkdownRemark","nodes","map","node","index","key","onMouseEnter","to","fields","slug","frontmatter","title","Main","main","StyledLogo","Logo","StyledAside1","Aside1","StyledLabel1","Label1","NotFoundPage","as"],"mappings":"2FAAA,6DAKMA,EAAOC,IAAOC,GAAV,oEAAGD,CAAH,mEAOJE,EAAWF,IAAOG,GAAV,wEAAGH,CAAH,sBAIRI,EAAWJ,YAAOK,QAAV,wEAAGL,CAAH,8CACVM,KAqDWC,IAhDE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAOC,yBAAe,cA+B5B,OACE,kBAACX,EAAD,CAAMY,KAAK,aAAaC,aAAc,kBAAMJ,EAAY,QACrDC,EAAKI,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAChC,kBAACf,EAAD,CAAUgB,IAAKD,GACb,kBAACb,EAAD,CACEe,aAAc,kBAAMX,EAAYQ,IAChCI,GAAIJ,EAAKK,OAAOC,MAEfN,EAAKO,YAAYC,c,kCC9D9B,2GASMC,EAAOzB,IAAO0B,KAAV,mEAAG1B,CAAH,kLASJ2B,EAAa3B,YAAO4B,KAAV,yEAAG5B,CAAH,wCAIV6B,EAAe7B,YAAO8B,KAAV,2EAAG9B,CAAH,yCAKZ+B,EAAe/B,YAAOgC,KAAV,2EAAGhC,CAAH,yBAwBHiC,UApBM,SAAC,GAAa,EAAXxB,KACtB,OACE,gBAACgB,EAAD,KACE,gBAAC,IAAD,CAAKD,MAAM,mBACX,gBAAC,OAAD,CAAMJ,GAAG,KACP,gBAACO,EAAD,OAEF,gBAACE,EAAD,qFAIA,gBAACE,EAAD,CAAcG,GAAG,MAAjB,wDAGA,gBAAC,IAAD,MACA,gBAAC,IAAD","file":"component---src-pages-404-js-67ff8c28a615f2cb655e.js","sourcesContent":["import React from 'react'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport { Heading3Styles } from '../styles/Typography'\n\nconst List = styled.ul`\n  list-style: none;\n  margin-top: 5rem;\n  margin-bottom: 6rem;\n  padding: 0;\n`\n\nconst PostItem = styled.li`\n  margin-top: 1rem;\n`\n\nconst PostLink = styled(Link)`\n  ${Heading3Styles}\n  font-weight: 300;\n  text-decoration: none;\n`\n\nconst PostList = ({ onLinkHover }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        nodes {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            cover {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <List role=\"navigation\" onMouseLeave={() => onLinkHover(null)}>\n      {data.allMarkdownRemark.nodes.map((node, index) => (\n        <PostItem key={index}>\n          <PostLink\n            onMouseEnter={() => onLinkHover(node)}\n            to={node.fields.slug}\n          >\n            {node.frontmatter.title}\n          </PostLink>\n        </PostItem>\n      ))}\n    </List>\n  )\n}\n\nexport default PostList\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Footer from '../components/Layout/Footer'\nimport { Aside1, Label1 } from '../styles/Typography'\nimport Logo from '../components/Layout/Logo'\nimport PostList from '../components/PostList'\nimport SEO from '../components/seo'\n\nconst Main = styled.main`\n  margin: 0 auto;\n  max-width: 700px;\n  padding: 0 1rem;\n  --text-color: var(--light-sea-green-value);\n  --caption-color: var(--light-sea-green-value);\n  color: rgb(var(--light-sea-green-value));\n`\n\nconst StyledLogo = styled(Logo)`\n  margin-top: calc(100vh * 20 / 100);\n`\n\nconst StyledAside1 = styled(Aside1)`\n  margin-top: 3.85rem;\n  max-width: 580px;\n`\n\nconst StyledLabel1 = styled(Label1)`\n  margin-top: 0.55rem;\n`\n\nconst NotFoundPage = ({ data }) => {\n  return (\n    <Main>\n      <SEO title=\"404: Not Found\" />\n      <Link to=\"/\">\n        <StyledLogo />\n      </Link>\n      <StyledAside1>\n        It looks like you have your 404 moment here. All the other 403 tests\n        passed.\n      </StyledAside1>\n      <StyledLabel1 as=\"h1\">\n        The page you're looking for must be somewhere below.\n      </StyledLabel1>\n      <PostList />\n      <Footer />\n    </Main>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}